{%extends file="../layout_admin.tpl"%}
{%block name="title"%}
BDE-用户列表
{%/block%}
{%block name="static-resource"%}
    {%require name="bde:static/css/admin/users.less"%}
{%/block%}

{%block name="header-nav"%}
    {%widget name="bde:widget/headerNav/headerNav.tpl"
            mode='admin'
            users=' selected'
    %}
{%/block%}
{%block name="content"%}
    <div class="page-wrapper">
        <div class="user-list">
            <div id="outer" class="dropzone">

               <div id="other" class="dropzone">
                   <h2 class="header">无角色用户</h2>

               </div>
               <div id="biu" class="dropzone">
                   <h2 class="header">BIU用户</h2>
               </div>

               <div id="nc" class="dropzone">
                   <h2 class="header">NC用户</h2>
               </div>
            </div>
        </div>
    </div>

{%require name="bde:page/admin/users.tpl"%}

{%script%}
require(['/userTable/userTable', 'interact'], function(table, interact){
    table.init('#outer', '/bde/api/userlist');
    interact('.draggable')
      .draggable({
        // enable inertial throwing
        inertia: true,
        // keep the element within the area of it's parent
        restrict: {
          restriction: "parent",
          endOnly: true,
          elementRect: { top: 0, left: 0, bottom: 1, right: 1 }
        },

        // call this function on every dragmove event
        onmove: dragMoveListener,
        // call this function on every dragend event
        onend: function (event) {
          var textEl = event.target.querySelector('p');

          textEl && (textEl.textContent =
            'moved a distance of '
            + (Math.sqrt(event.dx * event.dx +
                         event.dy * event.dy)|0) + 'px');
        }
      });

  function dragMoveListener (event) {
    var target = event.target,
        x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
        y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

    target.style.webkitTransform =
    target.style.transform =
      'translate(' + x + 'px, ' + y + 'px)';

    target.setAttribute('data-x', x);
    target.setAttribute('data-y', y);
  }

  window.dragMoveListener = dragMoveListener;

  interact('.dropzone').dropzone({
      // Require a 75% element overlap for a drop to be possible
      overlap: 0.75,

      ondropactivate: function (event) {
        event.target.classList.add('drop-active');
      },

      ondragenter: function (event) {
        var draggableElement = event.relatedTarget,
            dropzoneElement = event.target;

        // feedback the possibility of a drop
        dropzoneElement.classList.add('drop-target');
        //draggableElement.classList.add('can-drop');
        //draggableElement.textContent = 'Dragged in';
      },
      ondragleave: function (event) {
        // remove the drop feedback style
        event.target.classList.remove('drop-target');
        //event.relatedTarget.classList.remove('can-drop');
        //event.relatedTarget.textContent = 'Dragged out';
      },
      ondrop: function (event) {
        var $span = $(event.relatedTarget);
        var $dropzone = $(event.target);
        var type = {
            other: 0,
            nc: 1,
            biu: 2
        };
        $.ajax({
            url: '/bde/api/pointtype',
            type: 'POST',
            dataType: 'json',
            data: {
                type: type[$dropzone.attr('id')],
                uid: $span.data('id')
            }
            }).done(function(r){
                
                if (r.status === 0){
                    $span.addClass('can-drop');

                }else{
                    $span.removeClass('can-drop');

                }
            
            });
        $dropzone.removeClass('drop-target');
        //event.relatedTarget.textContent = 'Dropped';
      },
      ondropdeactivate: function (event) {
        // remove active dropzone feedback
        event.target.classList.remove('drop-active');
        event.target.classList.remove('drop-target');
      }
    });
});
{%/script%}

    
{%/block%}
