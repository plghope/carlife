/**
 * @file 数据列表筛选模块
 * @author zengguanming
 *
 */

define(function () {
    var $ = require('throttle');
    var dataList = require('/dataList/dataList');

    var options;
    var AJAX_URL;

    var pageSize = 10;
    var curPage;

    /**
     * 数据query请求
     * @param {Obejct} param 请求参数
     * @param {Object} page 分页参数
     */
    function _query(param, page) {

        var st = page - 1 ? (page - 1) * pageSize : 0;

        param = $.extend(param, {
            start: st,
            end: st + pageSize
        });

        $.ajax({
            url: AJAX_URL,
            type: 'POST',
            dataType: 'json',
            data: param,
            success: function (data) {
                if (data.status === 0) {
                    var ret = data.data;
                    dataList.init(ret.dataList, {acl: options.acl});

                    setPageStatus(page, ret.amount, 10);
                }else{
                    dataList.init([], {acl: options.acl});
                    setPageStatus(page, 1, 10);
                }
            }
        });
    }

    function setPageStatus(page, amount) {

        var margin = false;
        var maxPage = Math.ceil(amount / pageSize);

        curPage = page = page > maxPage ? maxPage : page;

        // 边界情况处理
        if (page === 1) {
            $('#link-pager-box .prev')
                .addClass('disabled')
                .siblings('item')
                .removeClass('disabled');

            margin = true;
        }

        if (page === maxPage) {
            $('#link-pager-box .next')
                .addClass('disabled')
                .siblings('item')
                .removeClass('disabled');

            margin = true;

        }
        if (!margin) {
            $('#link-pager-box li').removeClass('disabled');
        }

        $('#curPage').text(page);
    }

    function getRequestParam() {
        var param = {};
        var ret;

        if ((ret = $('.keyword-filter input').val())) {
            param['key_word'] = ret;
        }

        if (options && options.priviledge) {
            var $a = $('#data-select-filter li.period-selected');
            param.type = $a.data('query');
        }

        return param;
    }

    function _init(opt) {

        var $li = $('#data-select-filter li').first();

        options = opt;

        initPagerComponent();

        // 筛选事件侦听
        $('#data-select-filter').on('click', 'li', function (e) {
            var $li = $(e.target);
            $li
                .addClass('period-selected')
                .siblings()
                .removeClass('period-selected');

            _query(getRequestParam(), 1);

        });


        function keywordCallback() {
            var val = $(this).val();

            var param = {};
            param['key_word'] = val;

            _query($.extend(getRequestParam, param), 1);
        }


        $('.keyword-filter input').on('keyup', $.debounce(250, keywordCallback));

        $li.length > 0 ? $li.trigger('click') : _query(getRequestParam(), 1);

    }

    /**
     * 初始化分页设置
     */
    function initPageControl() {
        var $selectBox = $('#link-pager-box .select-box');
        var $select = $selectBox.prev();
        var html = '';

        $select.val(pageSize);

        var curText = $('option:selected', $select).text();
        $('.current-select', $selectBox).text(curText);

        html += '<ul class="page-control">'
            +       '<li data-select="10">10</li>'
            +       '<li data-select="20">20</li>'
            +       '<li data-select="30">30</li>'
            + '</ul>';

        // pageSize选择框
        $selectBox.on('click', 'li', function (e) {
            var $li = $(e.target).closest('li');
            var ret = $li.data('select');
            // 禁止点击的不做响应
            if ($li.hasClass('select-disabled')) {
                return;
            }
            else {
                // 同步select状态
                $select.val(ret);
                // 同时更改selectbox文字
                var curText = $('option:selected', $select).text();
                $('.current-select', $selectBox).text(curText);
            }

            pageSize = ret;
            _query(getRequestParam(), 1);

        });

        $selectBox.append(html).css({
            display: 'inline-block'
        });
    }



    function initPageAction() {
        var $pageAction = $('#link-pager-box .page-action');

        var html =  '<ul class="clearfix">'
                +       '<li class="prev disabled"><<</li>'
                +       '<li class="item" id="curPage">' + 1 + '</li>'
                +       '<li class="next">>></li>'
                +   '</ul>'
                +   '<div>'
                +       '<span>第 <input name="pageNav" id="pageNav"></input> 页<span>'
                +       '<a id="page-confirm" href="javascript:void(0);">确定</a>'
                +   '</div>';

        $pageAction.append(html);

        $pageAction.on('click', 'li', function (e) {
            var $li = $(e.target).closest('li');

            if ($li.hasClass('disabled')) {
                return;
            }

            if ($li.is('.prev')) {
                _query(getRequestParam(), curPage - 1);
            }else if ($li.is('.next')) {
                _query(getRequestParam(), curPage + 1);
            }
        });

        $('#page-confirm').on('click', function () {
            var page = +$('#pageNav').val();
            _query(getRequestParam(), page);
        });

    }

    /**
     * 初始化下拉选择框
     */
    function initPagerComponent() {
        initPageControl();
        initPageAction();

    }




    /**
     * 外部调用: 初始化
     */
    return {
        build: function (ajaxUrl, options) {
            AJAX_URL = ajaxUrl;
            _init(options);

        }
    };
});


